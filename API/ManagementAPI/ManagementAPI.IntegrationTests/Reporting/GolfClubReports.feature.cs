// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ManagementAPI.IntegrationTests.Reporting
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "base")]
    [Xunit.TraitAttribute("Category", "golfclub")]
    [Xunit.TraitAttribute("Category", "reporting")]
    public partial class GolfClubReportsFeature : Xunit.IClassFixture<GolfClubReportsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "GolfClubReports.feature"
#line hidden
        
        public GolfClubReportsFeature(GolfClubReportsFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GolfClubReports", null, ProgrammingLanguage.CSharp, new string[] {
                        "base",
                        "golfclub",
                        "reporting"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "GolfClubNumber",
                        "EmailAddress",
                        "GivenName",
                        "MiddleName",
                        "FamilyName",
                        "Password",
                        "ConfirmPassword",
                        "TelephoneNumber"});
            table32.AddRow(new string[] {
                        "1",
                        "admin@testgolfclub1.co.uk",
                        "Admin",
                        "",
                        "User1",
                        "123456",
                        "123456",
                        "01234567890"});
#line 5
 testRunner.Given("the following golf club administrators have been registered", ((string)(null)), table32, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "GolfClubNumber",
                        "GolfClubName",
                        "AddressLine1",
                        "AddressLine2",
                        "Town",
                        "Region",
                        "PostalCode",
                        "TelephoneNumber",
                        "EmailAddress",
                        "WebSite"});
            table33.AddRow(new string[] {
                        "1",
                        "Test Golf Club 1",
                        "Test Golf Club Address Line 1",
                        "Test Golf Club Address Line",
                        "TestTown1",
                        "TestRegion",
                        "TE57 1NG",
                        "01234567890",
                        "testclub1@testclub1.co.uk",
                        "www.testclub1.co.uk"});
#line 8
 testRunner.And("the following golf clubs exist", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlayerNumber",
                        "EmailAddress",
                        "GivenName",
                        "MiddleName",
                        "FamilyName",
                        "DateOfBirth",
                        "Gender",
                        "ExactHandicap"});
            table34.AddRow(new string[] {
                        "1",
                        "testplayer1@players.co.uk",
                        "Test",
                        "",
                        "Player1",
                        "1990-01-01",
                        "M",
                        "2"});
            table34.AddRow(new string[] {
                        "2",
                        "testplayer2@players.co.uk",
                        "Test",
                        "",
                        "Player2",
                        "1991-01-01",
                        "M",
                        "4"});
            table34.AddRow(new string[] {
                        "3",
                        "testplayer3@players.co.uk",
                        "Test",
                        "",
                        "Player3",
                        "1992-01-01",
                        "M",
                        "10"});
            table34.AddRow(new string[] {
                        "4",
                        "testplayer4@players.co.uk",
                        "Test",
                        "",
                        "Player4",
                        "1993-01-01",
                        "M",
                        "12"});
            table34.AddRow(new string[] {
                        "5",
                        "testplayer5@players.co.uk",
                        "Test",
                        "",
                        "Player5",
                        "1994-01-01",
                        "M",
                        "1"});
            table34.AddRow(new string[] {
                        "6",
                        "testplayer6@players.co.uk",
                        "Test",
                        "",
                        "Player6",
                        "1995-01-01",
                        "M",
                        "20"});
            table34.AddRow(new string[] {
                        "7",
                        "testplayer7@players.co.uk",
                        "Test",
                        "",
                        "Player7",
                        "1996-01-01",
                        "M",
                        "24"});
#line 11
 testRunner.And("the following players have registered", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "GolfClubNumber",
                        "PlayerNumber"});
            table35.AddRow(new string[] {
                        "1",
                        "1"});
            table35.AddRow(new string[] {
                        "1",
                        "2"});
            table35.AddRow(new string[] {
                        "1",
                        "3"});
            table35.AddRow(new string[] {
                        "1",
                        "4"});
            table35.AddRow(new string[] {
                        "1",
                        "5"});
            table35.AddRow(new string[] {
                        "1",
                        "6"});
            table35.AddRow(new string[] {
                        "1",
                        "7"});
#line 20
 testRunner.And("the following players are club members of the following golf clubs", ((string)(null)), table35, "And ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Get Number of Members Report")]
        [Xunit.TraitAttribute("FeatureTitle", "GolfClubReports")]
        [Xunit.TraitAttribute("Description", "Get Number of Members Report")]
        public virtual void GetNumberOfMembersReport()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Number of Members Report", null, ((string[])(null)));
#line 30
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 31
 testRunner.When("I request a number of members report for club number 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("I am returned the report data successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
 testRunner.And("the number of members count for club number 1 is 7", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                GolfClubReportsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                GolfClubReportsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
