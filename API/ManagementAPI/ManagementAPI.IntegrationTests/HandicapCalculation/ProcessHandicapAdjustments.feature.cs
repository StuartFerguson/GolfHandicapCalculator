// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ManagementAPI.IntegrationTests.HandicapCalculation
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "base")]
    [Xunit.TraitAttribute("Category", "golfclub")]
    [Xunit.TraitAttribute("Category", "player")]
    [Xunit.TraitAttribute("Category", "tournament")]
    public partial class ProcessHandicapAdjustmentsFeature : Xunit.IClassFixture<ProcessHandicapAdjustmentsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ProcessHandicapAdjustments.feature"
#line hidden
        
        public ProcessHandicapAdjustmentsFeature(ProcessHandicapAdjustmentsFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ProcessHandicapAdjustments", "\tIn order to run a golf club handicapping system\r\n\tAs a club administrator\r\n\tI ne" +
                    "ed to be able to process handicap adjustments", ProgrammingLanguage.CSharp, new string[] {
                        "base",
                        "golfclub",
                        "player",
                        "tournament"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "GolfClubNumber",
                        "EmailAddress",
                        "GivenName",
                        "MiddleName",
                        "FamilyName",
                        "Password",
                        "ConfirmPassword",
                        "TelephoneNumber"});
            table36.AddRow(new string[] {
                        "1",
                        "admin@testgolfclub1.co.uk",
                        "Admin",
                        "",
                        "User1",
                        "123456",
                        "123456",
                        "01234567890"});
#line 9
 testRunner.Given("the following golf club administrator has been registered", ((string)(null)), table36, "Given ");
#line 12
 testRunner.And("I am logged in as the administrator for golf club 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "GolfClubNumber",
                        "GolfClubName",
                        "AddressLine1",
                        "AddressLine2",
                        "Town",
                        "Region",
                        "PostalCode",
                        "TelephoneNumber",
                        "EmailAddress",
                        "WebSite"});
            table37.AddRow(new string[] {
                        "1",
                        "Test Golf Club 1",
                        "Test Golf Club Address Line 1",
                        "Test Golf Club Address Line",
                        "TestTown1",
                        "TestRegion",
                        "TE57 1NG",
                        "01234567890",
                        "testclub1@testclub1.co.uk",
                        "www.testclub1.co.uk"});
#line 13
 testRunner.When("I create a golf club with the following details", ((string)(null)), table37, "When ");
#line 16
 testRunner.Then("the golf club is created successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "GolfClubNumber",
                        "MeasuredCourseNumber",
                        "Name",
                        "StandardScratchScore",
                        "TeeColour"});
            table38.AddRow(new string[] {
                        "1",
                        "1",
                        "Test Course",
                        "70",
                        "White"});
#line 17
 testRunner.When("I add a measured course to the club with the following details", ((string)(null)), table38, "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "GolfClubNumber",
                        "MeasuredCourseNumber",
                        "HoleNumber",
                        "LengthInYards",
                        "Par",
                        "StrokeIndex"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "1",
                        "348",
                        "4",
                        "10"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "2",
                        "402",
                        "4",
                        "4"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "3",
                        "207",
                        "3",
                        "14"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "4",
                        "405",
                        "4",
                        "8"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "5",
                        "428",
                        "4",
                        "2"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "6",
                        "477",
                        "5",
                        "12"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "7",
                        "186",
                        "3",
                        "16"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "8",
                        "397",
                        "4",
                        "6"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "9",
                        "130",
                        "3",
                        "18"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "10",
                        "399",
                        "4",
                        "3"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "11",
                        "401",
                        "4",
                        "13"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "12",
                        "421",
                        "4",
                        "1"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "13",
                        "530",
                        "5",
                        "11"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "14",
                        "196",
                        "3",
                        "5"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "15",
                        "355",
                        "4",
                        "7"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "16",
                        "243",
                        "4",
                        "15"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "17",
                        "286",
                        "4",
                        "17"});
            table39.AddRow(new string[] {
                        "1",
                        "1",
                        "18",
                        "399",
                        "4",
                        "9"});
#line 20
 testRunner.And("with the following holes", ((string)(null)), table39, "And ");
#line 40
 testRunner.Then("the measured course is added to the club successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "TournamentNumber",
                        "TournamentName",
                        "TournamentDate",
                        "TournamentFormat",
                        "PlayerCategory",
                        "MeasuredCourseName",
                        "GolfClubNumber"});
            table40.AddRow(new string[] {
                        "1",
                        "Test Tournament 1",
                        "Today",
                        "Strokeplay",
                        "Gents",
                        "Test Course",
                        "1"});
#line 41
 testRunner.Given("When I create a tournament with the following details", ((string)(null)), table40, "Given ");
#line 44
 testRunner.Then("tournament number 1 for golf club 1 measured course \'Test Course\' will be created" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlayerNumber",
                        "EmailAddress",
                        "GivenName",
                        "MiddleName",
                        "FamilyName",
                        "Age",
                        "Gender",
                        "ExactHandicap"});
            table41.AddRow(new string[] {
                        "1",
                        "testplayer1@players.co.uk",
                        "Test",
                        "",
                        "Player1",
                        "25",
                        "M",
                        "6.2"});
#line 45
 testRunner.Given("the following players have registered", ((string)(null)), table41, "Given ");
#line 48
 testRunner.Given("I am logged in as player number 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.When("I request membership of club number 1 for player number 1 the request is successf" +
                    "ul", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.When("player number 1 signs up to play in tournament number 1 for golf club 1 measured " +
                    "course \'Test Course\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then("player number 1 is recorded as signed up for tournament number 1 for golf club 1 " +
                    "measured course \'Test Course\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlayerNumber",
                        "Hole1",
                        "Hole2",
                        "Hole3",
                        "Hole4",
                        "Hole5",
                        "Hole6",
                        "Hole7",
                        "Hole8",
                        "Hole9",
                        "Hole10",
                        "Hole11",
                        "Hole12",
                        "Hole13",
                        "Hole14",
                        "Hole15",
                        "Hole16",
                        "Hole17",
                        "Hole18"});
            table42.AddRow(new string[] {
                        "1",
                        "4",
                        "5",
                        "4",
                        "4",
                        "4",
                        "5",
                        "3",
                        "4",
                        "3",
                        "4",
                        "4",
                        "4",
                        "5",
                        "3",
                        "4",
                        "4",
                        "4",
                        "4"});
#line 52
 testRunner.When("a player records the following score for tournament number 1 for golf club 1 meas" +
                    "ured course \'Test Course\'", ((string)(null)), table42, "When ");
#line 55
 testRunner.Then("the scores recorded by the players are recorded against tournament number 1 for g" +
                    "olf club 1 measured course \'Test Course\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 56
 testRunner.When("I request to complete the tournament number 1 for golf club 1 measured course \'Te" +
                    "st Course\' the tournament is completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.When("I request to produce a tournament result for tournament number 1 for golf club 1 " +
                    "measured course \'Test Course\' the results are produced", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Start Calculation Process with a Single Score")]
        [Xunit.TraitAttribute("FeatureTitle", "ProcessHandicapAdjustments")]
        [Xunit.TraitAttribute("Description", "Start Calculation Process with a Single Score")]
        public virtual void StartCalculationProcessWithASingleScore()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Start Calculation Process with a Single Score", null, ((string[])(null)));
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 60
 testRunner.When("I start the handicap calculation process for tournament number 1 for golf club 1 " +
                    "measured course \'Test Course\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
 testRunner.And("the process completes successfully for tournament number 1 for golf club 1 measur" +
                    "ed course \'Test Course\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.Then("the new playing handicap for player number 1 is adjusted to 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
 testRunner.And("the new exact handicap for player number 1 is adjusted to 5.0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ProcessHandicapAdjustmentsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ProcessHandicapAdjustmentsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
